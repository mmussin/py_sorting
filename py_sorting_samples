# Sorting


alist = [54,26,93,17,77,31,44,55,20,5,91]
print alist

# Bubble sort
def bubbleSort(alist):
    for i in range(len(alist)-1,0,-1):
        for j in range(i):
            if alist[j] > alist[j+1]:
                temp = alist[j]
                alist[j] = alist[j+1]
                alist[j+1] = temp

# Insertion sort
def insertionSort(alist):
   for index in range(1,len(alist)):
     currentValue = alist[index]
     position = index
     while position > 0 and alist[position-1] > currentValue:
         alist[position] = alist[position-1]
         position = position-1
     alist[position] = currentValue

# Quick sort
def quickSort(alist):
   quickSortHelper(alist,0,len(alist)-1)

def quickSortHelper(alist,first,last):
   if first<last:
       splitpoint = partition(alist,first,last)
       quickSortHelper(alist,first,splitpoint-1)
       quickSortHelper(alist,splitpoint+1,last)


def partition(alist,first,last):
   pivotvalue = alist[first]
   leftmark = first+1
   rightmark = last
   done = False
   while not done:
       while leftmark <= rightmark and alist[leftmark] <= pivotvalue:
           leftmark = leftmark + 1
       while alist[rightmark] >= pivotvalue and rightmark >= leftmark:
           rightmark = rightmark -1
       if rightmark < leftmark:
           done = True
       else:
           temp = alist[leftmark]
           alist[leftmark] = alist[rightmark]
           alist[rightmark] = temp
   temp = alist[first]
   alist[first] = alist[rightmark]
   alist[rightmark] = temp
   return rightmark


# Bubble
bubbleSort(alist)
print(alist)
# Insertion
insertionSort(alist)
print(alist)
# Quick
quickSort(alist)
print(alist)
